{"version":3,"sources":["pages/payload.js"],"names":["Launchpads","props","handleChange","stateChanged","setState","state","loading","payloadData","error","payloadId","match","params","payload","this","axios","get","then","res","data","catch","e","className","payload_id","payload_type","manufacturer","nationality","customers","length","join","norad_id","orbit","payload_mass_kg","payload_mass_lbs","orbit_params","Object","keys","map","key","index","charAt","toUpperCase","slice","split","React","Component"],"mappings":"wLAIMA,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAURC,aAAe,SAAAC,GACb,EAAKC,SAASD,IATd,EAAKE,MAAQ,CACXC,SAAS,EACTC,YAAa,GACbC,OAAO,EACPC,UAAWR,EAAMS,MAAMC,OAAOC,SAPf,E,iFAeE,IAAD,OACVH,EAAcI,KAAKR,MAAnBI,UACRK,IACGC,IAAI,0CAA4CN,GAChDO,MAAK,SAAAC,GACJ,IAAMV,EAAcU,EAAIC,KACpBV,GAAQ,EACR,UAAWD,IACbC,GAAQ,GAEV,EAAKJ,SAAS,CACZG,cACAD,SAAS,EACTE,aAGHW,OAAM,SAAAC,GACL,EAAKhB,SAAS,CACZI,OAAO,S,+BAKL,IAAD,EACiCK,KAAKR,MAArCC,EADD,EACCA,QAASC,EADV,EACUA,YAEjB,OAHO,EACuBC,MAGrB,sEAGLF,EACK,sBAIP,6BACE,uCACA,yBAAKe,UAAU,sBACb,yBAAKA,UAAU,cACb,8BAAOd,EAAYe,aAErB,yBAAKD,UAAU,aACb,+BACE,+BACE,4BACE,oCACA,4BAAKd,EAAYgB,eAEnB,4BACE,4CACA,4BAAKhB,EAAYiB,eAEnB,4BACE,2CACA,4BAAKjB,EAAYkB,cAEnB,4BACE,yCACA,4BACKlB,EAAYmB,WAAanB,EAAYmB,UAAUC,OAC9CpB,EAAYmB,UAAUE,KAAK,MAC3B,KAGR,4BACE,wCACA,4BACKrB,EAAYsB,UAAYtB,EAAYsB,SAASF,OAC5CpB,EAAYsB,SAASD,KAAK,MAC1B,KAGR,4BACE,qCACA,4BAAKrB,EAAYuB,QAEnB,4BACE,+CACA,4BAAKvB,EAAYwB,kBAEnB,4BACE,gDACA,4BAAKxB,EAAYyB,qBAKvB,yBAAKX,UAAU,6BAAf,gBACA,+BACE,+BACGd,EAAY0B,aACTC,OAAOC,KAAK5B,EAAY0B,cAAcG,KAAI,SAACC,EAAKC,GAAN,OACxC,wBAAID,IAAKC,GACP,6BACID,EAAIE,OAAO,GAAGC,cAAgBH,EAAII,MAAM,IACvCC,MAAM,KACNd,KAAK,MAEV,4BAAKrB,EAAY0B,aAAaI,QAGlC,c,GArHKM,IAAMC,WA+HhB5C","file":"static/js/6.a60e710f.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Launchpads extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      payloadData: {},\n      error: false,\n      payloadId: props.match.params.payload\n    };\n  }\n\n  handleChange = stateChanged => {\n    this.setState(stateChanged);\n  };\n\n  componentDidMount() {\n    const { payloadId } = this.state;\n    axios\n      .get(`https://api.spacexdata.com/v3/payloads/` + payloadId)\n      .then(res => {\n        const payloadData = res.data;\n        let error = false;\n        if (\"error\" in payloadData) {\n          error = true;\n        }\n        this.setState({\n          payloadData,\n          loading: false,\n          error\n        });\n      })\n      .catch(e => {\n        this.setState({\n          error: true\n        });\n      });\n  }\n\n  render() {\n    const { loading, payloadData, error } = this.state;\n\n    if (error) {\n      return \"Payload is not present or some error has occured. Please try again.\";\n    }\n\n    if (loading) {\n      return \"Loading payload....\";\n    }\n\n    return (\n      <div>\n        <h3>Payload</h3>\n        <div className=\"card payload-width\">\n          <div className=\"card-title\">\n            <span>{payloadData.payload_id}</span>\n          </div>\n          <div className=\"card-body\">\n            <table>\n              <tbody>\n                <tr>\n                  <td>Type</td>\n                  <td>{payloadData.payload_type}</td>\n                </tr>\n                <tr>\n                  <td>Manufacturer</td>\n                  <td>{payloadData.manufacturer}</td>\n                </tr>\n                <tr>\n                  <td>Nationality</td>\n                  <td>{payloadData.nationality}</td>\n                </tr>\n                <tr>\n                  <td>Customers</td>\n                  <td>\n                    {!!payloadData.customers && payloadData.customers.length\n                      ? payloadData.customers.join(\", \")\n                      : \"\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Norad Id</td>\n                  <td>\n                    {!!payloadData.norad_id && payloadData.norad_id.length\n                      ? payloadData.norad_id.join(\", \")\n                      : \"\"}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Orbit</td>\n                  <td>{payloadData.orbit}</td>\n                </tr>\n                <tr>\n                  <td>Payload Mass Kg</td>\n                  <td>{payloadData.payload_mass_kg}</td>\n                </tr>\n                <tr>\n                  <td>Payload Mass lbs</td>\n                  <td>{payloadData.payload_mass_lbs}</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <div className=\"card-small-title m-tb-25 \">Orbit params</div>\n            <table>\n              <tbody>\n                {payloadData.orbit_params\n                  ? Object.keys(payloadData.orbit_params).map((key, index) => (\n                      <tr key={index}>\n                        <td>\n                          {(key.charAt(0).toUpperCase() + key.slice(1))\n                            .split(\"_\")\n                            .join(\" \")}\n                        </td>\n                        <td>{payloadData.orbit_params[key]}</td>\n                      </tr>\n                    ))\n                  : null}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Launchpads;\n"],"sourceRoot":""}
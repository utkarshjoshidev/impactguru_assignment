{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/launchpads.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","Launchpads","state","loading","launchpads","statuses","selectedStatus","currentLaunchpads","handleChange","stateChanged","setState","filterLaunchPad","status","filter","data","axios","get","then","res","map","includes","push","this","className","id","name","onChange","e","target","value","index","key","title","location","region","latitude","longitude","details","React","Component"],"mappings":"yGAGe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,CACtB,IAAK,IAAIG,EAAI,EAAGC,EAAO,IAAIH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAC5DC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,GDFF,CAAkBJ,IEJZ,SAA0BM,GACvC,GAAIC,OAAOC,YAAYC,OAAOH,IAAkD,uBAAzCG,OAAOC,UAAUC,SAASC,KAAKN,GAAgC,OAAOL,MAAMY,KAAKP,GFGvF,CAAgBN,IGJpC,WACb,MAAM,IAAIc,UAAU,mDHGqC,G,+EIDrDC,E,2MACJC,MAAQ,CACNC,SAAS,EACTC,WAAY,GACZC,SAAU,GACVC,eAAgB,MAChBC,kBAAmB,I,EAGrBC,aAAe,SAAAC,GACb,EAAKC,SAASD,I,EAwBhBE,gBAAkB,SAAAC,GAAW,IACnBR,EAAe,EAAKF,MAApBE,WAEJG,EAAiB,EAAOH,GAEd,OAAVQ,IACFL,EAAoBH,EAAWS,QAAO,SAAAC,GAAI,OAAIA,EAAKF,QAAUA,MAG/D,EAAKF,SAAS,CACZH,oBACAD,eAAgBM,K,mFAhCC,IAAD,OAClBG,IAAMC,IAAN,4CAAsDC,MAAK,SAAAC,GACzD,IAAMd,EAAac,EAAIJ,KAEnBT,EAAW,GAEfa,EAAIJ,KAAKK,KAAI,SAAAL,GACNT,EAASe,SAASN,EAAKF,SAC1BP,EAASgB,KAAKP,EAAKF,WAIvB,EAAKF,SAAS,CACZN,aACAG,kBAAmBH,EACnBD,SAAS,EACTE,kB,+BAoBI,IAAD,SAC0DiB,KAAKpB,MAA9DC,EADD,EACCA,QAASI,EADV,EACUA,kBAAmBF,EAD7B,EAC6BA,SAAUC,EADvC,EACuCA,eAE9C,OAAIH,EACK,wBAIP,6BACE,0CACA,yBAAKoB,UAAU,UACb,gDACA,4BACEC,GAAG,UACHC,KAAK,UACLC,SAAU,SAAAC,GACR,EAAKhB,gBAAgBgB,EAAEC,OAAOC,QAEhCA,MAAOvB,GAEP,4BAAQuB,MAAM,OAAd,OACCxB,EAASc,KAAI,SAACP,EAAQkB,GAAT,OACZ,4BAAQC,IAAKD,EAAOD,MAAOjB,GACxBA,QAKT,yBAAKW,UAAU,kBACZhB,EAAkBY,KAAI,SAACL,EAAMgB,GAC5B,IAAIlB,EAAS,UAEb,OAAQE,EAAKF,QACX,IAAK,SACHA,EAAS,SACT,MACF,IAAK,UACHA,EAAS,SACT,MACF,IAAK,qBACHA,EAAS,YAIb,OACE,yBAAKW,UAAU,OAAOQ,IAAKD,GACzB,yBAAKP,UAAU,cACb,0BACEA,UAAW,UAAYX,EACvBoB,MAAOlB,EAAKF,SAEd,8BAAOE,EAAKW,OAEd,yBAAKF,UAAU,aACb,yBAAKA,UAAU,oBAAf,kBACA,2BACGT,EAAKmB,SAASR,KADjB,MAC0BX,EAAKmB,SAASC,OACtC,6BAFF,QAGQpB,EAAKmB,SAASE,SAHtB,UAGuC,IACpCrB,EAAKmB,SAASG,WAGjB,uBAAGb,UAAU,eAAeT,EAAKuB,oB,GA/G1BC,IAAMC,WA0HhBtC","file":"static/js/4.3068f7ea.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React from \"react\";\nimport axios from \"axios\";\n\nclass Launchpads extends React.Component {\n  state = {\n    loading: true,\n    launchpads: [],\n    statuses: [],\n    selectedStatus: \"all\",\n    currentLaunchpads: []\n  };\n\n  handleChange = stateChanged => {\n    this.setState(stateChanged);\n  };\n\n  componentDidMount() {\n    axios.get(`https://api.spacexdata.com/v3/launchpads`).then(res => {\n      const launchpads = res.data;\n\n      let statuses = [];\n\n      res.data.map(data => {\n        if (!statuses.includes(data.status)) {\n          statuses.push(data.status);\n        }\n      });\n\n      this.setState({\n        launchpads,\n        currentLaunchpads: launchpads,\n        loading: false,\n        statuses\n      });\n    });\n  }\n\n  filterLaunchPad = status => {\n    const { launchpads } = this.state;\n\n    let currentLaunchpads = [...launchpads];\n\n    if (status != \"all\") {\n      currentLaunchpads = launchpads.filter(data => data.status == status);\n    }\n\n    this.setState({\n      currentLaunchpads,\n      selectedStatus: status\n    });\n  };\n\n  render() {\n    const { loading, currentLaunchpads, statuses, selectedStatus } = this.state;\n\n    if (loading) {\n      return \"Loading launchpad....\";\n    }\n\n    return (\n      <div>\n        <h3>Launchpads</h3>\n        <div className=\"filter\">\n          <label>Status Filter</label>\n          <select\n            id=\"filters\"\n            name=\"filters\"\n            onChange={e => {\n              this.filterLaunchPad(e.target.value);\n            }}\n            value={selectedStatus}\n          >\n            <option value=\"all\">All</option>\n            {statuses.map((status, index) => (\n              <option key={index} value={status}>\n                {status}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"flex-container\">\n          {currentLaunchpads.map((data, index) => {\n            let status = \"bg-grey\";\n\n            switch (data.status) {\n              case \"active\":\n                status = \"active\";\n                break;\n              case \"retired\":\n                status = \"danger\";\n                break;\n              case \"under construction\":\n                status = \"bg-orange\";\n                break;\n            }\n\n            return (\n              <div className=\"card\" key={index}>\n                <div className=\"card-title\">\n                  <span\n                    className={\"status \" + status}\n                    title={data.status}\n                  ></span>\n                  <span>{data.name}</span>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"card-small-title\">Launch Details</div>\n                  <p>\n                    {data.location.name} - {data.location.region}\n                    <br />\n                    lat: {data.location.latitude}, long:{\" \"}\n                    {data.location.longitude}\n                  </p>\n\n                  <p className=\"discription\">{data.details}</p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Launchpads;\n"],"sourceRoot":""}